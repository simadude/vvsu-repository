import pandas as pd

# 1. Загрузите базу данных из файла Titanic.csv
df = pd.read_csv('Titanic.csv')

# 2. Загрузите базу данных так из файла еще раз, но так, чтобы столбец PassengerId был идентификатором, то есть номером строки (index).
df = pd.read_csv('Titanic.csv', index_col='PassengerId')

# 3. Удалите из базы строки с пропущенными значениями и сохраните изменения в самой базе.
df = df.dropna()

# 3. Выведите сводную информацию по базе данных: какие переменные в ней есть, какого они типа + сколько заполненных наблюдений в каждой столбце.
print(df.info())

# 4. Выведите сводную статистическую информацию по каждому количественному показателю в базе (описательные статистики).
print(df.describe())

# 5. Постройте гистограмму для переменной Возраст (Age), сделайте ее красного цвета, подпишите оси и добавьте заголовок графика.

import matplotlib.pyplot as plt
plt.hist(df['Age'], color='red')
plt.xlabel('Возраст')
plt.ylabel('Количество')
plt.title('Возраста паcсажиров')
plt.show()

# 6. Выведите описательные статистики для столбца Стоимость билета (Fare). Работа со строками и столбцами базы
print(df['Fare'].describe())

# 7. Выведите названия столбцов в базе данных в виде списка (объект типа list).
print(list(df.columns))

# 8. Переименуйте столбец с классом пассажира из Pclass в Class.
df.rename(columns = {"Pclass": "Class"}, inplace=True)

#9. Выберите из базы данных все строки, которые соответствуют пассажирам женского пола, и сохраните их в новую базу female.
female = df[df["Sex"] == "female"]

# 10. Выберите из базы данных все строки, которые соответствуют выжившим пассажирам мужского пола младше 32 лет, и сохраните их в базу Ymale.
Ymale = df[(df["Survived"] == True) & (df["Sex"] == "male") & (df["Age"] < 32)]

# 11. Выберите из базы данных все строки, которые соответствуют пассажирам 1 или 2 класса.
df[(df["Class"] == 1) | (df["Class"] == 2)]

# 12. Выберите из базы данных все строки, которые соответствуют выжившим пассажирам 1 или 2 класса.
df[(df["Survived"] == True) & ((df["Class"] == 1) | (df["Class"] == 2))]

# 13. Добавьте в датафрейм столбец Female, состоящий из значений 0 и 1, где 1 соответствует пассажирам женского пола.
df["Female"] = df["Sex"].map({"female": 1, "male": 0})

# 1. Выведите на экран все уникальные значения в столбце Embarked.
print(df.Embarked.unique())

# 2. Сгруппируйте строки в датафрейме в соответствии со значениями переменной Survived и выведите средние значения всех количественных переменных по группам.
df.groupby("Survived").mean(numeric_only=True)

# 3. Сгруппируйте строки в датафрейме в соответствии со значениями переменной Sex и сохраните в отдельный датафрейм таблицу со средними и медианными значениями переменной Age по группам (мужчины и женщины).
df.groupby("Sex")["Age"].agg(["mean", "median"])

# Выгрузка базы в файл
# 1. Приведите все названия столбцов в датафрейме к нижнему регистру и сохраните
# изменения.
# 2. Выгрузите итоговый датафрейм в файл Titanic-new.csv.

df.rename(columns=str.lower, inplace=True)
df.index.name = df.index.name.lower()
df.to_csv("Titanic-new.csv")